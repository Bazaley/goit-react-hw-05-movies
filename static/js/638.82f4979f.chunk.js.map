{"version":3,"file":"static/js/638.82f4979f.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/PageHeading/PageHeading.styled.js","components/PageHeading/PageHeading.jsx","components/QueryForm/QueryForm.styled.js","components/QueryForm/QueryForm.jsx","pages/Movies/Movies.jsx","services/requestsForMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(255, 255, 255, 0.2),\n    0px 1px 1px 0px rgba(255, 255, 255, 0.14),\n    0px 2px 1px -1px rgba(255, 255, 255, 0.12);\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n`;\n\nexport const DescriptionBox = styled.div`\n  padding: 20px 0 20px 10px;\n`;\n\nexport const Paragraph = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  text-align: center;\n  color: white;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Item, DescriptionBox, Paragraph } from './MovieItem.styled';\n\nconst BASE_URL_IMAGE = 'https://image.tmdb.org/t/p/w500/';\n\nexport const MovieItem = ({ poster, title, movieId }) => {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <Link to={`/movies/${movieId}`} state={{ from: location }}>\n        {poster ? (\n          <img src={`${BASE_URL_IMAGE}${poster}`} alt=\"\" />\n        ) : (\n          <img\n            src=\"https://via.placeholder.com/400x600.png?text=Not%20image\"\n            alt=\"\"\n          />\n        )}\n      </Link>\n      <DescriptionBox>\n        <Paragraph>{title}</Paragraph>\n      </DescriptionBox>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { MovieItem } from 'components/MovieItem/MovieItem';\nimport { List } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <>\n      <List>\n        {movies.map(({ id, poster_path, title }) => {\n          return (\n            <MovieItem\n              key={id}\n              poster={poster_path}\n              title={title}\n              movieId={id}\n            />\n          );\n        })}\n      </List>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Heading = styled.h1`\n  text-align: center;\n  color: white;\n`;\n","import { Heading } from './PageHeading.styled';\n\nexport const PageHeading = ({ text }) => {\n  return <Heading>{text}</Heading>;\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  width: 300px;\n  margin: 0 auto;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 30px;\n  border: none;\n  border-bottom: 1px solid white;\n  background-color: transparent;\n  font-size: 18px;\n  color: white;\n  text-align: center;\n  &:focus {\n    outline: 1px solid white;\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 11px;\n  right: 0;\n  border: none;\n  background-color: transparent;\n\n  color: white;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { BsSearch } from 'react-icons/bs';\nimport { Wrapper, Input, Button } from './QueryForm.styled';\n\nexport const QueryForm = ({ setSearchParams, setMovies }) => {\n  const [value, setValue] = useState('');\n\n  const handleInput = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query: value });\n    setMovies([]);\n\n    setValue('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Wrapper>\n        <Input type=\"text\" value={value} onChange={handleInput} />\n\n        <Button type=\"submit\">\n          <BsSearch />\n        </Button>\n      </Wrapper>\n    </form>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, Outlet } from 'react-router-dom';\nimport { QueryForm } from 'components/QueryForm/QueryForm';\nimport { fetchMovieBySearchQuery } from 'services/requestsForMovies';\nimport { PageHeading } from 'components/PageHeading/PageHeading';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { debounce } from 'debounce';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    async function fetch() {\n      const {\n        data: { total_pages, results },\n      } = await fetchMovieBySearchQuery(query, currentPage);\n\n      if (!results.length) {\n        Notify.failure(\n          'Sorry, there are no movies matching your search query. Please try again',\n          {\n            width: '500px',\n            position: 'center-top',\n            distance: '250px',\n          }\n        );\n        setMovies([]);\n        setCurrentPage(1);\n      }\n\n      if (total_pages === currentPage) return;\n\n      setMovies(state => [...state, ...results]);\n    }\n    fetch();\n  }, [query, currentPage]);\n\n  useEffect(() => {\n    const scrollHandler = e => {\n      if (\n        e.target.documentElement.scrollHeight ===\n        e.target.documentElement.scrollTop + window.innerHeight\n      ) {\n        setCurrentPage(state => state + 1);\n      }\n    };\n    document.addEventListener('scroll', debounce(scrollHandler, 200));\n    return () => document.removeEventListener('scroll', scrollHandler);\n  }, []);\n\n  return (\n    <>\n      <PageHeading text=\"Find your movie\" />\n      <QueryForm setSearchParams={setSearchParams} setMovies={setMovies} />\n      {movies && (\n        <>\n          <MoviesList movies={movies} />\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '4f349eaa26ab680508bb40abbe6da2af';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrandingMovies = async page => {\n  return await axios.get('/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n      page,\n    },\n  });\n};\n\nexport const fetchMovieById = async movieId => {\n  return await axios.get(`movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      append_to_response: 'videos',\n    },\n  });\n};\n\nexport const fetchCast = async movieId => {\n  return await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchMovieReviews = async movieId => {\n  return await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchMovieBySearchQuery = async (query, page) => {\n  return await axios.get('search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n      page,\n    },\n  });\n};\n"],"names":["Item","styled","DescriptionBox","Paragraph","MovieItem","poster","title","movieId","location","useLocation","to","state","from","src","alt","List","MoviesList","movies","map","id","poster_path","Heading","PageHeading","text","Wrapper","Input","Button","QueryForm","setSearchParams","setMovies","useState","value","setValue","onSubmit","e","preventDefault","query","type","onChange","target","currentPage","setCurrentPage","useSearchParams","searchParams","get","useEffect","fetchMovieBySearchQuery","data","total_pages","results","length","Notify","width","position","distance","fetch","scrollHandler","documentElement","scrollHeight","scrollTop","window","innerHeight","document","addEventListener","debounce","removeEventListener","API_KEY","axios","fetchTrandingMovies","page","params","api_key","fetchMovieById","append_to_response","fetchCast","fetchMovieReviews"],"sourceRoot":""}