{"version":3,"file":"static/js/767.66c8359a.chunk.js","mappings":"uQAEaA,E,QAASC,GAAAA,OAAH,mG,SCANC,EAAc,SAAC,GAA8B,IAAjBC,EAAgB,EAA3BC,QAAWD,QACvC,OACE,SAACH,EAAD,CACEK,IAAG,wCAAmCF,EAAQA,EAAQG,OAAS,GAAGC,KAClEC,MAAM,uBACNC,YAAY,IACZC,MAAM,2FACNC,iBAAe,GAGpB,ECQD,EAfgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OAVAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,uGAGYC,EAAAA,EAAAA,IAAeH,GAH3B,gBAEYI,EAFZ,EAEIC,KAAQD,OAGVL,EAAWK,GALb,4CADc,uBAAC,WAAD,wBAQdE,EACD,GAAE,CAACN,KACG,8BAAGV,IAAW,SAACF,EAAD,CAAaE,QAASA,KAC5C,C,kMCjBKiB,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,WAAMC,GAAN,iFACpBF,EAAAA,EAAAA,IAAU,sBAAuB,CAC5CG,OAAQ,CACNC,QAASL,EACTG,KAAAA,KAJ6B,mFAAH,sDASnBP,EAAc,mCAAG,WAAMH,GAAN,iFACfQ,EAAAA,EAAAA,IAAA,gBAAmBR,GAAW,CACzCW,OAAQ,CACNC,QAASL,EACTM,mBAAoB,YAJI,mFAAH,sDASdC,EAAS,mCAAG,WAAMd,GAAN,iFACVQ,EAAAA,EAAAA,IAAA,gBAAmBR,EAAnB,YAAsC,CACjDW,OAAQ,CACNC,QAASL,KAHU,mFAAH,sDAQTQ,EAAiB,mCAAG,WAAMf,GAAN,iFAClBQ,EAAAA,EAAAA,IAAA,gBAAmBR,EAAnB,YAAsC,CACjDW,OAAQ,CACNC,QAASL,KAHkB,mFAAH,sDAQjBS,EAAuB,mCAAG,WAAOC,EAAOP,GAAd,iFACxBF,EAAAA,EAAAA,IAAU,eAAgB,CACrCG,OAAQ,CACNC,QAASL,EACTU,MAAAA,EACAP,KAAAA,KALiC,mFAAH,uD","sources":["components/TrailerList/TrilerList.styled.js","components/TrailerList/TrailerList.jsx","pages/Trailer/Trailer.jsx","services/requestsForMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Iframe = styled.iframe`\n  display: 'block';\n  width: 97vw;\n  height: 70vh;\n  margin: '0 auto';\n`;\n","import { Iframe } from './TrilerList.styled';\n\nexport const TrailerList = ({ trailer: { results } }) => {\n  return (\n    <Iframe\n      src={`https://www.youtube.com/embed/${results[results.length - 1].key}`}\n      title=\"YouTube video player\"\n      frameBorder=\"0\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen\n    ></Iframe>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieById } from 'services/requestsForMovies';\nimport { TrailerList } from 'components/TrailerList/TrailerList';\n\nconst Trailer = () => {\n  const [trailer, setTrailer] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    async function fetch() {\n      const {\n        data: { videos },\n      } = await fetchMovieById(movieId);\n\n      setTrailer(videos);\n    }\n    fetch();\n  }, [movieId]);\n  return <>{trailer && <TrailerList trailer={trailer} />}</>;\n};\nexport default Trailer;\n","import axios from 'axios';\n\nconst API_KEY = '4f349eaa26ab680508bb40abbe6da2af';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrandingMovies = async page => {\n  return await axios.get('/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n      page,\n    },\n  });\n};\n\nexport const fetchMovieById = async movieId => {\n  return await axios.get(`movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      append_to_response: 'videos',\n    },\n  });\n};\n\nexport const fetchCast = async movieId => {\n  return await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchMovieReviews = async movieId => {\n  return await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const fetchMovieBySearchQuery = async (query, page) => {\n  return await axios.get('search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n      page,\n    },\n  });\n};\n"],"names":["Iframe","styled","TrailerList","results","trailer","src","length","key","title","frameBorder","allow","allowFullScreen","useState","setTrailer","movieId","useParams","useEffect","fetchMovieById","videos","data","fetch","API_KEY","axios","fetchTrandingMovies","page","params","api_key","append_to_response","fetchCast","fetchMovieReviews","fetchMovieBySearchQuery","query"],"sourceRoot":""}